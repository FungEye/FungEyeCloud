name: CI/CD Pipeline Master Deployment

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Tests
        run: mvn -B test

  build:
    needs: tests
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - run: mkdir staging && cp target/*.jar staging
      - name: Create app.yaml
        run: |
          echo "runtime: java" > staging/app.yaml
          echo "env: flexible" >> staging/app.yaml
          echo "automatic_scaling:" >> staging/app.yaml
          echo "  min_num_instances: 4" >> staging/app.yaml
          echo "  max_num_instances: 20" >> staging/app.yaml
          echo "network:" >> staging/app.yaml
          echo "  session_affinity: true" >> staging/app.yaml
          echo "liveness_check:" >> staging/app.yaml
          echo "  initial_delay_sec: \"300\"" >> staging/app.yaml
          echo "  check_interval_sec: \"30\"" >> staging/app.yaml
          echo "  timeout_sec: \"4\"" >> staging/app.yaml
          echo "  failure_threshold: 4" >> staging/app.yaml
          echo "  success_threshold: 2" >> staging/app.yaml
          echo "readiness_check:" >> staging/app.yaml
          echo "  check_interval_sec: \"60\"" >> staging/app.yaml
          echo "  timeout_sec: \"4\"" >> staging/app.yaml
          echo "runtime_config:" >> staging/app.yaml
          echo "  operating_system: \"ubuntu22\"" >> staging/app.yaml
          echo "  runtime_version: \"17\"" >> staging/app.yaml
          

          
      

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: FungEyeJar
          path: staging
      - name: Upload app.yaml Artifact
        uses: actions/upload-artifact@v3
        with:
          name: AppYAML
          path: staging/app.yaml

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR Artifact
        uses: actions/download-artifact@v2
        with:
          name: FungEyeJar
          path: staging
      - name: Download app.yaml Artifact
        uses: actions/download-artifact@v2
        with:
          name: AppYAML
          path: staging
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
      - name: Deploy to Google App Engine
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud app deploy staging/app.yaml
